{"version":3,"file":"static/js/816.a1827ee3.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/ContactsList.module.css?a035","components/Phonebook/ContactsList.jsx","redux/filters/filterSelector.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Filter.module.css?d06b","components/Phonebook/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/loader/Loader.module.css?aa4a","shared/loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/FormAddContact.module.css?3edf","components/Phonebook/FormAddContact.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts.module.css?8552","pages/Contacts.js"],"sourcesContent":["export const selectLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.filter;\nexport const selectAllContacts = state => state.contacts.items;\nexport const getContacts = state => state.contacts;\n\nexport const getFilteredContacts = (items, filter) => {\n  if (!filter) {\n    return items;\n  }\n\n  const normalaisedFilter = filter.toLocaleLowerCase();\n  const filteredContacts = items.filter(({ name, number }) => {\n    const normalaisedName = name.toLocaleLowerCase();\n    const result =\n      normalaisedName.includes(normalaisedFilter) ||\n      number.includes(normalaisedFilter);\n    return result;\n  });\n  console.log(filteredContacts);\n  return filteredContacts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList__list\":\"ContactsList_ContactList__list__yAv+E\",\"ContactList__item\":\"ContactsList_ContactList__item__CcqD5\",\"ContactList__text\":\"ContactsList_ContactList__text__U4m8y\",\"ContactList__button\":\"ContactsList_ContactList__button__XwFst\"};","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getFilteredContacts,\n  selectAllContacts,\n  selectFilter,\n  selectLoading,\n} from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const items = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(state => getFilteredContacts(items, filter));\n\n  const onRemoveContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  if (contacts) {\n    const elements = contacts.map(({ name, id, number }) => {\n      return (\n        <li className={css.ContactList__item} key={id}>\n          <span className={css.ContactList__text}>\n            {name}: {number}\n          </span>\n          <button\n            className={css.ContactList__button}\n            type=\"button\"\n            onClick={() => onRemoveContact(id)}\n            disabled={isLoading}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n\n    return <ul className={css.ContactList__list}>{elements}</ul>;\n  }\n};\n","export const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"FilterContainer\":\"Filter_FilterContainer__d19oO\",\"FilterInput\":\"Filter_FilterInput__lzdo3\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filters/filterSelector';\nimport { setFilter } from 'redux/filters/filtersSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n  return (\n    <div className={css.FilterContainer}>\n      <label htmlFor=\"filter\">\n        Find contacts by name\n        <input\n          className={css.FilterInput}\n          type=\"text\"\n          name=\"filter\"\n          onChange={handleChange}\n          value={filter}\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Loader_backdrop__h8xP2\",\"loader\":\"Loader_loader__m2CXA\",\"rotation\":\"Loader_rotation__QxaXd\"};","import css from './Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={css.backdrop}>\n      <div className={css.loader}></div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"FormInput\":\"FormAddContact_FormInput__tInMK\",\"FormInput__input\":\"FormAddContact_FormInput__input__eUnbb\",\"FormButton\":\"FormAddContact_FormButton__TtSgl\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectAllContacts, selectLoading } from 'redux/contacts/selectors';\nimport Loader from 'shared/loader/Loader';\nimport css from './FormAddContact.module.css';\n\nexport const FormAddContact = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectAllContacts);\n  const isLoading = useSelector(selectLoading);\n\n  const handleAddContacts = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    const { name, number } = form;\n    const contact = {\n      name: name.value,\n      number: number.value,\n    };\n\n    items.find(\n      item => item.name === contact.name || item.phone === contact.number\n    )\n      ? alert(`${contact.name} - ${contact.number} is already in contacts.`)\n      : dispatch(addContact(contact));\n\n    event.currentTarget.reset();\n  };\n\n  return (\n    <form className={css.FormInput} onSubmit={handleAddContacts}>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          className={css.FormInput__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"phone\">\n        Number\n        <input\n          className={css.FormInput__input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.FormButton} type=\"submit\" disabled={isLoading}>\n        {isLoading && <Loader />}\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Contacts_section__lhdxY\",\"title\":\"Contacts_title__HJPSk\"};","import { ContactsList } from 'components/Phonebook/ContactsList';\nimport { Filter } from 'components/Phonebook/Filter';\nimport { FormAddContact } from 'components/Phonebook/FormAddContact';\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className={css.section}>\n        <h1 className={css.title}>PHONEBOOK</h1>\n\n        <FormAddContact />\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","isLoading","selectFilter","filter","selectAllContacts","items","ContactsList","useSelector","dispatch","useDispatch","normalaisedFilter","toLocaleLowerCase","filteredContacts","name","number","includes","console","log","getFilteredContacts","elements","map","id","className","css","type","onClick","deleteContact","onRemoveContact","disabled","getFilter","Filter","htmlFor","onChange","e","value","target","setFilter","Loader","FormAddContact","handleAddContacts","event","preventDefault","form","currentTarget","contact","find","item","phone","alert","addContact","reset","onSubmit","pattern","title","required","Contacts","useEffect","fetchContacts"],"sourceRoot":""}